链表
由一系列节点构成的链式结构。每个节点由两部分组成：数值和指针。指针可以指向下一个节点。

位运算
把内存中每一个二进制看成一个单元 进行某种运算。
建议 ：对于参与位运算的数据，统一采用无符号整数。

分类：
一、逻辑运算
1.按位取反
每一个二进制位取反，1变0，0变1.
01100100
10011011
unsigned int a=100,b;
b=~a;
printf(“%u”,b);
2.按位与：
与运算&，表示对两个二进制数，逐位进行与运算。
10000
01011 
||
0
unsigned char a=5,b=24,c;
c=a&b;
printf(“%u\n”,c);
3.按位或:
运算符|，
4.按位异或
运算符^,按位运算，相异为真，相同为假。
二、移位运算
1.左移
运算符<<,表示对一个二进制数，向左移动若干位，右边用0补充，左边移出边界的部分直接忽略。
unsigned char a=5,b=24,c;
c=b<<3;
printf(“%u\n”,c);
00011000――移动后11000000
通常来说，左移多少位相当于该数扩大2的多少次方。
2.右移
运算符>>，表示对一个二进制数，向右移动若干位，左边用0补充，右边移出边界的部分直接忽略。
通常来说，左移多少位相当于该数缩小2的多少次方。


位运算的应用。
1.在嵌入式领域。
对于特定的二进制位，设置为1代表某种状态的开启，设置为0代表该种状态的关闭。
（1）把特定的位置设为1
把一个字节中从左数第3位设为1，只需要把原始数据与第3位为1的数据进行按位或运算即可。
unsigned char a=.....;
unsigned char b=32;
a=a|b; //可以简写为 a|=b;
a就变成了第3位为1，其他位保持原始状态的数据，
（2）把特定的为设为0；
把一个字节中从左数第3位设为0，只需要把原始数据与第3位为0的数据进行按位与运算即可。
unsigned char a=.....;
unsigned char b=223;
a=a&b; //可以简写为 a&=b;
a就变成了第3位为0，其他位保持原始状态的数据，

2.判断奇偶性
以前的写法：
int a;
。。。。。。。
if(a%2==0)
else 


if(a&1)  奇数
else  偶数


3.对于2的n次方的乘除法，在不会产生溢出的情况下，尽量使用左移或者右移运算
4.子网掩码
IP地址：4个1字节的无符号整数，如：172.24.10.6   每个数都在0--255之间 用于划分分子网，子网可以判断2个不同IP是否属于同一子网
每一个IP与掩码进行按位与，如果得到的结果相同，则位于同一子网。

存储类
包含：作用域(scope)、链接(linkage)、存储时期(storage duration)

1.作用域：变量或者函数影响的有效范围，一个变量的作用域是从变量到定义所在的位置开始，局部变量到变量所在的花括号结束，全局变量到整个程序结束。

(2)内部链接：具有内部链接的变量可以在一个文件的任何地方使用。static关键字表明一个变量具有内部链接方式；(在代码块内)
(3)空链接：所有局部变量或者在花括号内部的变量都具有空链接。意味着该变量是所在花括号内部私有的。
3.存储时期
(1)静态存储时期：具有静态存储时期的变量在程序执行期间将一直存在。具有文件作用域的变量具有静态存储时期。
(2)自动存储时期：具有自动存储时期的变量到了作用域结束就不再存在。具有快代码作用域的变量一般情况下具有自动存储时期。
extra: register int a=5//？
static还可以用在函数声明之前，如果一个函数在声明之前没有加static，表示整个工程各个文件都可以使用该函数(相当于全局函数)，
如果函数声明前加上static，则只有该文件内部才可以使用该函数，其他文件不能用该函数。

工程中的建议：
变量尽量不适用全局的，不要跨文件使用变量，把变量的范围控制在文件内部；
而函数尽量使用全局的.