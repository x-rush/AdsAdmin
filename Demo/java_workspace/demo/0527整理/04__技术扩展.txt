（1）数据库事务(安全)


（2）druid连接池(性能)

JDBC访问数据库

第一步：建立数据库连接
第二步：执行SQL语句
第三步：关闭连接

问题：建立连接和关闭连接、反复操作。

对连接进行优化(池化技术)

原理：

在服务器启动的时候、可以建立100个连接对象、然后把这些连接对象存入连接池中、如果需要访问数据库、
从连接池中获取连接、访问完数据库之后、再连接对象存入连接池中。

连接池很多：dbcp、c3p0、druid等。

http://127.0.0.1:8080/druid

（3）logback

日志很多种：log4j、logback等。

SpringBoot默认使用的日志是logback。

日志用来记录项目中的操作信息、错误信息、用户行为等。

日志数据信息就是之后大数据的基础。

日志等级：
DEBUG：输出调试信息；指出细粒度信息事件对调试应用程序是非常有帮助的。 
INFO： 输出提示信息；消息在粗粒度级别上突出强调应用程序的运行过程。 
WARN： 输出警告信息；表明会出现潜在错误的情形。 
ERROR：输出错误信息；指出虽然发生错误事件，但仍然不影响系统的继续运行。 
FATAL： 输出致命错误；指出每个严重的错误事件将会导致应用程序的退出。 
ALL level：打开所有日志记录开关；是最低等级的，用于打开所有日志记录。 
OFF level：关闭所有日志记录开关；是最高等级的，用于关闭所有日志记录。

按照范围从小到大排序：OFF level > FATAL > ERROR > WARN > INFO > DEBUG > ALL level

（4）redis

Nosql概念
Redis概念

set key1 value1
get key1

缓存技术主要是针对查询进行优化、添加、修改、删除、查询

缓存机制原理

浏览器
浏览器
浏览器
浏览器	――>	Tomcat服务器	――> 	Redis服务器	――> 	Mysql服务器
浏览器
浏览器
浏览器
浏览器

使用Redis实现缓存的具体实现：

(1)pom文件引入jar包依赖
(2)appliation配置redis
(3)配置redis工具类com.zhaoyang.util.RedisConfig
(4)实体类必须实现序列化Serializable接口、并且生成序列化ID
(5)启动类@EnableCaching
(6)使用缓存注解