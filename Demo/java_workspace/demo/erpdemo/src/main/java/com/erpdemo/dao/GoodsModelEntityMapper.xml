<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.erpdemo.dao.GoodsModelEntityMapper" >
  <resultMap id="BaseResultMap" type="com.erpdemo.entity.GoodsModelEntity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="tid" property="tid" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="delflag" property="delflag" jdbcType="INTEGER" />
    <result column="addtime" property="addtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, tid, name, price, userid, delflag, addtime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_goods_model
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_goods_model
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.erpdemo.entity.GoodsModelEntity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_goods_model (id, tid, name, 
      price, userid, delflag, 
      addtime)
    values (#{id,jdbcType=INTEGER}, #{tid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{userid,jdbcType=INTEGER}, #{delflag,jdbcType=INTEGER}, 
      now())
  </insert>
  <insert id="insertSelective" parameterType="com.erpdemo.entity.GoodsModelEntity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_goods_model
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="tid != null" >
        tid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="delflag != null" >
        delflag,
      </if>
      <if test="addtime != null" >
        addtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tid != null" >
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="delflag != null" >
        #{delflag,jdbcType=INTEGER},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.erpdemo.entity.GoodsModelEntity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_goods_model
    <set >
      <if test="tid != null" >
        tid = #{tid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="delflag != null" >
        delflag = #{delflag,jdbcType=INTEGER},
      </if>
      <if test="addtime != null" >
        addtime = #{addtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.erpdemo.entity.GoodsModelEntity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_goods_model
    set tid = #{tid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      userid = #{userid,jdbcType=INTEGER},
      delflag = #{delflag,jdbcType=INTEGER},
      addtime = #{addtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

<update id="update" parameterType="com.erpdemo.entity.GoodsModelEntity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_goods_model
    set tid = #{tid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      userid = #{userid,jdbcType=INTEGER},
      delflag = #{delflag,jdbcType=INTEGER},
      addtime = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
 
  <select id="queryTotal" resultType="int" >
		select 
			count(*) 
		from t_goods_model 
		<where>
    		and delflag=0
		</where>
  </select>

  
 <select id="queryList" resultMap="BaseResultMap" >
   		select 
  			*
   		from 
   			t_goods_model 
    	<where>
			<if test="name != null and name.trim() != '' ">
				and name like concat('%',#{name},'%') 
			</if>
			and delflag=0
		</where>
   
   		<choose>
			<otherwise>
				order by addtime desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
  </select>
  
   <select id="findForSearch" resultMap="BaseResultMap" >
    select 
    	m.id as id,
		m.tid as tid, 
		m.name as name,
		m.price as price, 
		m.userid as userid , 
		m.delflag as delflag, 
		m.addtime as addtime 
		
	from 
		t_goods_model m 
		
    where 1=1 
    <if test="param.name != null and param.name != ''">
    	and m.name like concat('%',#{param.name},'%')
    </if>
   
   
   order by p.addtime desc
   
   limit #{index},#{count}
   
  </select>
  
   <select id="findForCount" resultType="int" >
  	select 
  		count(*) 
  	from 
  		t_goods_model
  </select>






</mapper>