<?php//公共信息处理actionclass PublicAction extends Action{			//加载登录页面	public function login(){		//echo md5('admin');die;		$this->display("login");	}			//执行登录验证方法	public function checkLogin(){		//验证验证码        if ($_SESSION['verify'] != md5($_POST['verify'])) {            $this->assign("errorinfo","验证码错误！");            $this->display("login");            exit;        }		//根据登录账号获取当前用户信息		$authInfo = M("Users")->where("username = '{$_POST['username']}'")->find();				if($authInfo){			//判断密码			if($authInfo['userpass']===md5($_POST['password'])){				//登录成功				//将当前用户信息存储到session中				$_SESSION[C('USER_AUTH_KEY')]=$authInfo;				$_SESSION[C('USER_AUTH_KEY')]['logintime']=time();//将管理员本次登录时间存进SESSION中				//将用户表中登录用户的登录次数加一				$info = M("Users")->find($authInfo['id']);				//$info['logintime'] = time();//登录时间				$info['loginnum']++;//登录次数加一				M("Users")->save($info);//更新数据				//2. 根据当前用户id号获取对应的节点信息				$list = M()->query("select n.mname,n.aname from edu_userrole ur,edu_role_node rn,edu_node n where ur.rid=rn.rid and rn.nid=n.id and ur.uid={$authInfo['id']}");				//遍历并封装节点列表				//dump($list);				$nodelist = array("index"=>array("index"));				foreach($list as $v){					$nodelist[$v['mname']][] = $v['aname'];					if($v['aname']=="edit"){						$nodelist[$v['mname']][]="update";					}					if($v['aname']=="add"){						$nodelist[$v['mname']][]="insert";					}				}				$_SESSION[C('USER_AUTH_KEY')]["nodelist"]=$nodelist;				$uid=$authInfo['id'];				$rolelist=M("Userrole")->where("uid='$uid'")->select();				foreach($rolelist as $v){					if($v['rid']==1){						$_SESSION[C('USER_AUTH_KEY')]["nodelist"]=$nodelist;						break;					}else{						$_SESSION[C('USER_AUTH_KEY')]["nodelist"]='';					}				}				//跳转首页				$this->redirect('Index/index');			}else{				$this->assign("errorinfo",'登录密码错误！');				$this->display("login");				exit();			}		}else{			$this->assign("errorinfo",'帐号不存在或已禁用！');			$this->display("login");			exit();		}			}		//执行退出操作方法	public function logout(){		//将用户本次登录的时间存进数据库		$list = M("Users")->find($_SESSION[C('USER_AUTH_KEY')]['id']);		$list['logintime'] = $_SESSION[C('USER_AUTH_KEY')]['logintime'];		$list['logouttime'] = time();//用户登出的时间		M("Users")->save($list);//保存数据		unset($_SESSION[C('USER_AUTH_KEY')]);//销毁用户的SESSION信息		$this->display("login");	}		//加载验证码	public function verify(){		import('ORG.Util.Image');		Image::buildImageVerify();	}}