字符串练习题
说明：5-6班已经在课堂上讲解了字符串内容，直接做后续的1-6练习题，周三课堂会分组检查1-6题，7-12供复习前面内容使用。
3-4班还没有讲解，可以先做7-12练习题，待周二上完课之后再做1-6，周三上课时分组检查1-6题。

1. 从键盘输入一个字符串（长度小于20），判断该字符串是否是回文串，输出“Y”或者“N”。

2. 从键盘输入一个字符串，把该字符串反向存入另一个字符串中，并输出反向之后的新字符串。
[1.
#include <stdio.h>
#include <string.h> 
int main() {
	char s1[20],s2[20];
	int i,len;
	gets(s1);
	len=strlen(s1); 
	for(i=0;i<len;i++){
		s2[i]=s1[len-i-1];
	}
	s2[len]='\0';
	puts(s2);
	return 0;
}
[2.
#include <stdio.h>
#include <string.h> 
int main() {
	char s1[20]={0},s2[20]={0};
	int pos1=19,pos2=0;
	gets(s1);
	while(pos1>=0){
		if(s1[pos1]!='\0'){
			s2[pos2++]=s1[pos1];
		}
		pos1--;
	}
	puts(s2);
	return 0;
}

3. 从键盘输入两个字符串（两行），分别存入两个字符数组c1,c2中，比较它们的大小，并且对二者进行升序排列（小的放入c1，大的放入c2），然后把c1和c2在两行中分别打印出来。
#include <stdio.h>
#include <string.h> 
int main() {
	char c1[20],c2[20],c3[20];
	gets(c1);
	gets(c2);
	if(strcmp(c1,c2)==1){//字符串比较 
		strcpy(c3,c1);//字符串赋值 
		strcpy(c1,c2);
		strcpy(c2,c3);
	}
	puts(c1);
	puts(c2);
	return 0;
}

4. 从键盘输入一个字符串，存入字符数组c1中，另外定义一个字符数组c2，把c1中的内容拷贝到c2中，如果超出了c2长度的限制，则截断，只拷贝c2能够容纳的部分，然后打印c2。
#include <stdio.h>
#include <string.h> 
int main() {
	char c1[20],c2[10];
	gets(c1);
	int len1=strlen(c1);
	int len2=sizeof(c2)-1;
	if(len1<=len2)
	    strcpy(c2,c1);
	else{
	    strncpy(c2,c1,len2);
	    c2[len2]='\0';
	}
	puts(c2);
	return 0;
}

5. 从键盘输入一个字符和一个字符串，分别存入字符变量c和字符数组s中，然后判断字符c是否在s中出现，如果出现，则打印Y以及第一次出现的下标号，如果没有出现，则打印N。
#include <stdio.h>
#include <string.h> 
int main() {
	char c,s[10];
	scanf("%c",&c);
	getchar();
	gets(s);
	int i,len=strlen(s);
	for(i=0;i<len;i++){
		if(c==s[i]){
			printf("Y\n%d\n",i);
			return 0;
		}
	}
	printf("N\n");
	return 0;
}


6. 从键盘输入一个字符和一个字符串，分别存入字符变量c和字符数组s中，然后判断字符c在s中出现了几次，打印出现的次数，以及每一次出现所在的下标号。

7. 读取从键盘的输入，直到遇到#，然后打印读取的空格数、回车数以及其他字符数量。

8. 读取从键盘的输入，直到遇到#，打印输入的字符中出现ei组合的次数。

9. 从键盘输入正整数n（2<n<2000000000），打印n以内的所有素数，用空格分开，每行显示3个。

10. 有一个已经初始化好的数组，打印该数组中最大值和最小值之间的差值。

11. 有一个10行4列的整型二维数组，每一行保存一个学生的学号和三门课程的成绩，计算并打印每个学生的平均成绩、每门课程的平均成绩，结果均保留2位小数。

12. 已知：
int a=4,b=3,c=2,d=1,m=0,n=0;
则表达式
(!(m=a>b))&&(n=c>d)的结果是多少，为什么？
