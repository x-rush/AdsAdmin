<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shengchi.springtest.mapper.CityMapper">
  <resultMap id="BaseResultMap" type="com.shengchi.springtest.entity.City">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="Name" jdbcType="CHAR" property="name" />
    <result column="CountryCode" jdbcType="CHAR" property="countrycode" />
    <result column="District" jdbcType="CHAR" property="district" />
    <result column="Population" jdbcType="INTEGER" property="population" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, Name, CountryCode, District, Population
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from city
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from city
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.shengchi.springtest.entity.City">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into city (ID, Name, CountryCode, 
      District, Population)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=CHAR}, #{countrycode,jdbcType=CHAR}, 
      #{district,jdbcType=CHAR}, #{population,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.shengchi.springtest.entity.City">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into city
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="name != null">
        Name,
      </if>
      <if test="countrycode != null">
        CountryCode,
      </if>
      <if test="district != null">
        District,
      </if>
      <if test="population != null">
        Population,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="countrycode != null">
        #{countrycode,jdbcType=CHAR},
      </if>
      <if test="district != null">
        #{district,jdbcType=CHAR},
      </if>
      <if test="population != null">
        #{population,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shengchi.springtest.entity.City">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update city
    <set>
      <if test="name != null">
        Name = #{name,jdbcType=CHAR},
      </if>
      <if test="countrycode != null">
        CountryCode = #{countrycode,jdbcType=CHAR},
      </if>
      <if test="district != null">
        District = #{district,jdbcType=CHAR},
      </if>
      <if test="population != null">
        Population = #{population,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shengchi.springtest.entity.City">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update city
    set Name = #{name,jdbcType=CHAR},
      CountryCode = #{countrycode,jdbcType=CHAR},
      District = #{district,jdbcType=CHAR},
      Population = #{population,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <select id="getListByName" resultMap="BaseResultMap" parameterType="map">
    SELECT ID, CITY.Name, COUNTRY.Name as countrycode, District, City.Population FROM CITY LEFT JOIN COUNTRY ON CITY.CountryCode=Country.Code WHERE CITY.NAME LIKE CONCAT('%', #{name}, '%') AND CITY.CountryCode LIKE CONCAT('%', #{countryCode}, '%') LIMIT #{pageNum}, #{pageSize}
  </select>
  <select id="getTotalForGetListByName" resultType="java.lang.Integer" parameterType="map">
    SELECT COUNT(ID) FROM CITY WHERE NAME LIKE CONCAT('%', #{name}, '%') AND CountryCode LIKE CONCAT('%', #{countryCode}, '%')
  </select>
</mapper>