<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.erpdemo.dao.CustomerReturnListEntityMapper" >
  <resultMap id="BaseResultMap" type="com.erpdemo.entity.CustomerReturnListEntity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="amountpaid" property="amountpaid" jdbcType="REAL" />
    <result column="amountpayable" property="amountpayable" jdbcType="REAL" />
    <result column="customerreturndate" property="customerreturndate" jdbcType="TIMESTAMP" />
    <result column="customerreturnnumber" property="customerreturnnumber" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="customerid" property="customerid" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="addtime" property="addtime" jdbcType="TIMESTAMP" />
    <result column="delflag" property="delflag" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, amountpaid, amountpayable, customerreturndate, customerreturnnumber, remarks, 
    state, customerid, userid, addtime, delflag
  </sql>
  
  
  <select id="queryObject" resultType="com.erpdemo.entity.CustomerReturnListEntity">
		select * from t_customer_return_list where id = #{value}
	</select>

	
	
	<!-- 楼下待修改
	 -->
	<select id="queryList" resultType="com.erpdemo.entity.CustomerReturnListEntity">
		select * from t_customer_return_list  
		<where>
			<if test="createUserId != null">
				and `create_user_id` = #{createUserId} 
			</if>
			<if test="username != null and username.trim() != ''">
				and `username` like concat('%',#{username},'%') 
			</if>
		</where>
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by user_id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
	<select id="findAll" resultMap="BaseResultMap">
		select 
	    <include refid="Base_Column_List" />
	    from t_customer_return_list
	
	</select>
	
	
	<select id="getOne" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_customer_return_list
    where id = #{id,jdbcType=INTEGER}
  </select>
	
	<select id="search" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_customer_return_list
    <where>
    <if test="customerreturnnumber != null and customerreturnnumber != ''">
    t_customer_return_list.customerreturnnumber like concat('%',#{customerreturnnumber},'%')   
    </if>
    </where>
  </select>
  
	
	<update id="update" parameterType="com.erpdemo.entity.CustomerReturnListEntity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_customer_return_list
    set amountpaid = #{amountpaid,jdbcType=REAL},
      amountpayable = #{amountpayable,jdbcType=REAL},
     <!--  customerreturndate = #{customerreturndate,jdbcType=TIMESTAMP}, -->
      customerreturnnumber = #{customerreturnnumber,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      customerid = #{customerid,jdbcType=INTEGER},
      userid = #{userid,jdbcType=INTEGER},
      <!-- addtime = #{addtime,jdbcType=TIMESTAMP}, -->
      delflag = #{delflag,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <delete id="deleteBatch">
		delete from t_customer_return_list where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
		;
		delete from t_customer_return_list where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
	
  
  
	
	
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_customer_return_list
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_customer_return_list
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  
  <insert id="insert" parameterType="com.erpdemo.entity.CustomerReturnListEntity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_customer_return_list (amountpaid, amountpayable, 
      customerreturndate, customerreturnnumber, 
      remarks, state, customerid, 
      userid, addtime, delflag
      )
    values (#{amountpaid,jdbcType=REAL}, #{amountpayable,jdbcType=REAL}, 
       now() , #{customerreturnnumber,jdbcType=VARCHAR}, 
      #{remarks,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{customerid,jdbcType=INTEGER}, 
      #{userid,jdbcType=INTEGER}, now() , #{delflag,jdbcType=VARCHAR}
      )
  </insert>
  
  
  
  
  
  <insert id="insertSelective" parameterType="com.erpdemo.entity.CustomerReturnListEntity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_customer_return_list
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="amountpaid != null" >
        amountpaid,
      </if>
      <if test="amountpayable != null" >
        amountpayable,
      </if>
      <if test="customerreturndate != null" >
        customerreturndate,
      </if>
      <if test="customerreturnnumber != null" >
        customerreturnnumber,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="customerid != null" >
        customerid,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="addtime != null" >
        addtime,
      </if>
      <if test="delflag != null" >
        delflag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="amountpaid != null" >
        #{amountpaid,jdbcType=REAL},
      </if>
      <if test="amountpayable != null" >
        #{amountpayable,jdbcType=REAL},
      </if>
      <if test="customerreturndate != null" >
        #{customerreturndate,jdbcType=TIMESTAMP},
      </if>
      <if test="customerreturnnumber != null" >
        #{customerreturnnumber,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="customerid != null" >
        #{customerid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="delflag != null" >
        #{delflag,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.erpdemo.entity.CustomerReturnListEntity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_customer_return_list
    <set >
      <if test="amountpaid != null" >
        amountpaid = #{amountpaid,jdbcType=REAL},
      </if>
      <if test="amountpayable != null" >
        amountpayable = #{amountpayable,jdbcType=REAL},
      </if>
      <if test="customerreturndate != null" >
        customerreturndate = #{customerreturndate,jdbcType=TIMESTAMP},
      </if>
      <if test="customerreturnnumber != null" >
        customerreturnnumber = #{customerreturnnumber,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="customerid != null" >
        customerid = #{customerid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="addtime != null" >
        addtime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="delflag != null" >
        delflag = #{delflag,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.erpdemo.entity.CustomerReturnListEntity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_customer_return_list
    set amountpaid = #{amountpaid,jdbcType=REAL},
      amountpayable = #{amountpayable,jdbcType=REAL},
      customerreturndate = #{customerreturndate,jdbcType=TIMESTAMP},
      customerreturnnumber = #{customerreturnnumber,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      customerid = #{customerid,jdbcType=INTEGER},
      userid = #{userid,jdbcType=INTEGER},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      delflag = #{delflag,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>