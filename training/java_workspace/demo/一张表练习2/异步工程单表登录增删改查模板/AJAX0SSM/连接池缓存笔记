Java项目5层机构

视图层			控制层				业务层			数据层			企业信息系统层
View			Controller			service			DAO				EIS

Vue框架数据交互	SpringMVC框架	Java语言		Mybatic框架		Mysql
增删改查			Spring框架			Spring框架		Spring框架
Axios框架

说明:添加,修改,删除,查询,检索,分页			及格

(一)连接池技术		http://127.0.0.1:8080/druid/login.html
连接池技术(池化技术)是对连接进行优化的技术
以前的Java连接数据库的方式是直连的方式(JDBC):
第一步:建立数据库的连接
第二步:执行sql语句
第三步:关闭连接
问题:每次执行SQL语句都必须重复建立关闭数据库连接,效率低
	建立数据库连接的时间比执行SQL时间还长
	
	因此:在项目中一定会对连接对象进行优化,叫连接池技术
	原理:在服务器启动的时候创建若干个连接对象,放在一个连接池中
	如果需要数据库连接,从连接池中获取一个连接对象,操作完成后,再把连接池对象放入连接池中
	让每个连接对象可以重复使用,从而提高效率
	
连接池技术多种:dbcp,c3p0,druid(阿里连接池技术)								druid(阿里连接池技术)

druid连接池步骤
1.配置pom.xml文件(druid的jar包
2.配置application.properties文件(druid的参数)

视图层			控制层			业务层			数据层			连接池			企业信息系统层

##########################################################################
(二)缓存技术--------------------------------------------------------------------------------------------------------------------------------------------------------
1.数据进行优化的缓存技术

现在项目的问题:每次用户查询数据都需要重复查询反复调用
例如点击查询十次数据就需要被查询调用十次

不使用缓存技术:每次查询都会查询数据库这样数据库压力特别大
为了提高项目效率一定会使用缓存技术

用户a	->


用户b	->		数据缓存区(abc,123)->员工管理系统->业务->数据->数据库


用户c	->

使用缓存技术每次查询先到缓存中查找如果找到直接返回如果找不到到数据库查找则查到的数据并放入缓存当中
现有的缓存技术有多种:ehcatch,redis等

2.现在数据的存储技术分为两大类
一是:关系型数据库,例如Mysql
二是:NoSQL,例如Redis数据库

大数据:底层nosql做的:Hadoop2(底层Java写的)大数据平台
Hadoop:大数据平台的构成
(1)HDFS			分布式存储
(2)MapReduce	分布式计算
(3)Yarn			大数据框架


3.Redis的配置步骤
1.配置pom.xml文件(redis的jar包)
2.配置application.properties文件(redis的参数)
3.存储的实体类必须实现序列化接口
4.配置缓存类com.yangfulai.util
5.使用缓存注解对数据进行优化


对象序列化的技术了解
对象的序列化就是把对象流(IO流)化:就是Java对象可以进行存储
比如把一个Person对象存储入d盘的一个文件中
解释:在我们当前的例子中,我们也需要把对象序列化,把对象存储到redis缓存中






